# This is a file.

Lexical Scanning in Go
Rob Pike
r@golang.org
GTUG Sydney
Aug 30, 2011



* A new template system

Wanted to replace the old Go template package.
It had many problems:
- inflexible
- inexpressive
- code too fragile

* A new template system

Key change was re-engineering with a true lexer, parser,
and evaluator.

NEED EXAMPLES HERE

* Lex items

Two things identify each lexed item:
- its type
- its value; a string is all we need
code lex/lex1.go /item.represents/ /^}/

* Lex type

The type is just an integer constant.
We use iota to define the values.

code lex/lex1.go /itemType.identifies/ /type/
code lex/lex1.go /const/ /itemEOF/

* Lex type values (continued)

code lex/lex1.go /itemElse/ /^\)/

* Printing a lex type

Define a String() string method and the "enum" prints itself.

code lex/lex1.go /func.*item.*String/ /^}/
